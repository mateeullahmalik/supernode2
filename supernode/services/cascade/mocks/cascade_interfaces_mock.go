// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go
//
// Generated by this command:
//
//	mockgen -destination=mocks/cascade_interfaces_mock.go -package=cascademocks -source=interfaces.go
//

// Package cascademocks is a generated GoMock package.
package cascademocks

import (
	context "context"
	reflect "reflect"

	cascade "github.com/LumeraProtocol/supernode/v2/supernode/services/cascade"
	gomock "go.uber.org/mock/gomock"
)

// MockCascadeServiceFactory is a mock of CascadeServiceFactory interface.
type MockCascadeServiceFactory struct {
	ctrl     *gomock.Controller
	recorder *MockCascadeServiceFactoryMockRecorder
	isgomock struct{}
}

// MockCascadeServiceFactoryMockRecorder is the mock recorder for MockCascadeServiceFactory.
type MockCascadeServiceFactoryMockRecorder struct {
	mock *MockCascadeServiceFactory
}

// NewMockCascadeServiceFactory creates a new mock instance.
func NewMockCascadeServiceFactory(ctrl *gomock.Controller) *MockCascadeServiceFactory {
	mock := &MockCascadeServiceFactory{ctrl: ctrl}
	mock.recorder = &MockCascadeServiceFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCascadeServiceFactory) EXPECT() *MockCascadeServiceFactoryMockRecorder {
	return m.recorder
}

// NewCascadeRegistrationTask mocks base method.
func (m *MockCascadeServiceFactory) NewCascadeRegistrationTask() cascade.CascadeTask {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewCascadeRegistrationTask")
	ret0, _ := ret[0].(cascade.CascadeTask)
	return ret0
}

// NewCascadeRegistrationTask indicates an expected call of NewCascadeRegistrationTask.
func (mr *MockCascadeServiceFactoryMockRecorder) NewCascadeRegistrationTask() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewCascadeRegistrationTask", reflect.TypeOf((*MockCascadeServiceFactory)(nil).NewCascadeRegistrationTask))
}

// MockCascadeTask is a mock of CascadeTask interface.
type MockCascadeTask struct {
	ctrl     *gomock.Controller
	recorder *MockCascadeTaskMockRecorder
	isgomock struct{}
}

// MockCascadeTaskMockRecorder is the mock recorder for MockCascadeTask.
type MockCascadeTaskMockRecorder struct {
	mock *MockCascadeTask
}

// NewMockCascadeTask creates a new mock instance.
func NewMockCascadeTask(ctrl *gomock.Controller) *MockCascadeTask {
	mock := &MockCascadeTask{ctrl: ctrl}
	mock.recorder = &MockCascadeTaskMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCascadeTask) EXPECT() *MockCascadeTaskMockRecorder {
	return m.recorder
}

// CleanupDownload mocks base method.
func (m *MockCascadeTask) CleanupDownload(ctx context.Context, actionID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CleanupDownload", ctx, actionID)
	ret0, _ := ret[0].(error)
	return ret0
}

// CleanupDownload indicates an expected call of CleanupDownload.
func (mr *MockCascadeTaskMockRecorder) CleanupDownload(ctx, actionID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CleanupDownload", reflect.TypeOf((*MockCascadeTask)(nil).CleanupDownload), ctx, actionID)
}

// Download mocks base method.
func (m *MockCascadeTask) Download(ctx context.Context, req *cascade.DownloadRequest, send func(*cascade.DownloadResponse) error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Download", ctx, req, send)
	ret0, _ := ret[0].(error)
	return ret0
}

// Download indicates an expected call of Download.
func (mr *MockCascadeTaskMockRecorder) Download(ctx, req, send any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Download", reflect.TypeOf((*MockCascadeTask)(nil).Download), ctx, req, send)
}

// Register mocks base method.
func (m *MockCascadeTask) Register(ctx context.Context, req *cascade.RegisterRequest, send func(*cascade.RegisterResponse) error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Register", ctx, req, send)
	ret0, _ := ret[0].(error)
	return ret0
}

// Register indicates an expected call of Register.
func (mr *MockCascadeTaskMockRecorder) Register(ctx, req, send any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockCascadeTask)(nil).Register), ctx, req, send)
}
